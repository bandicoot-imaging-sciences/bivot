!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).bivotJs={})}(this,function(e){function t(){return(t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}function n(e,t){return t||(t=e.slice(0)),e.raw=t,e}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}function i(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return o(e,void 0);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,void 0):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0;return function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function a(){var e=n(["\n    uniform sampler2D diffuseMap;\n    // Defined in <normalmap_pars_fragment>\n    // uniform sampler2D normalMap;\n    uniform sampler2D specularMap;\n\n    uniform sampler2D diffuseMapLow;\n    uniform sampler2D normalMapLow;\n    uniform sampler2D specularMapLow;\n\n    uniform float uExposure;\n    uniform float uBrightness;\n    uniform float uContrast;\n    uniform float uDiffuse;\n    uniform float uSpecular;\n    uniform float uRoughness;\n    uniform bool  uTint;\n    uniform bool  uFresnel;\n    uniform bool  uThreeJsShader;\n\n    uniform int   uBrdfModel;\n    uniform float uBrdfVersion;\n    uniform bool  uDual8Bit;\n    uniform bool  uLoadExr;\n\n    varying vec3 vNormal;\n    varying vec3 vTangent;\n    varying vec3 vBitangent;\n    varying vec2 vUv;\n    varying vec3 vViewPosition;\n\n    float pi = 3.14159265359;\n\n    #include <common>\n    #include <bsdfs>\n    #include <packing>\n    #include <lights_pars_begin>\n    #include <normalmap_pars_fragment>\n    #include <lights_physical_pars_fragment>\n\n    float calcLightAttenuation(float lightDistance, float cutoffDistance, float decayExponent) {\n      if (decayExponent > 0.0) {\n        // The common ShaderChunk includes: #define saturate(a) clamp( a, 0.0, 1.0 )\n        return pow(saturate(-lightDistance/cutoffDistance + 1.0), decayExponent);\n      }\n      return 1.0;\n    }\n\n    float DisneySpecular(float specular, float roughness, float ndh, float s) {\n      // TODO: Add episilon to fragile denominators.\n      float r4 = pow(roughness, 4.0);\n      float k = 1.0 - r4;\n      float c = (1.0/(s*PI))*((1.0/r4 + (1.0/(2.0*sqrt(k))*log((sqrt(k) + k)/(sqrt(k) - k)))));\n      float denom = pow((1.0 + (r4 - 1.0)*pow(ndh, 2.0)), 2.0);\n      return (specular)/(c*denom);\n    }\n\n    float MRSpecular(float roughness, float ndh, float ndl, float ndv) {\n      float r2 = roughness * roughness;\n\n      // Substance Designer uses a different expression for visibility:\n      //   float k = r2 / 2.0;\n      //   float visibility = 1.0 / (4.0 * (ndl * (1.0 - k) + k) * (ndv * (1.0 - k) + k));\n\n      // Three.js\n      //   The following code should be equivalent to calling:\n      //     return G_GGX_Smith(r2, ndl, ndv) * D_GGX(r2, ndh);\n      float k = r2 * r2;\n      float gl = ndl + sqrt(ndv*ndv * (1.0 - k) + k);\n      float gv = ndv + sqrt(ndl*ndl * (1.0 - k) + k);\n      float visibility = 1.0 / (gl * gv);\n      //float visibility = 0.25;\n      float t = r2 / (1.0 + (r2 * r2 - 1.0) * ndh*ndh);\n      return visibility * t*t / pi;\n    }\n\n\n    void main() {\n      vec4 diffuseSurface = texture2D(diffuseMap, vUv);\n      vec3 normalSurface = texture2D(normalMap, vUv).xyz;\n      vec4 specularTexel = texture2D(specularMap, vUv);\n\n      if (uDual8Bit) {\n        vec4 diffuseSurfaceLow = texture2D(diffuseMapLow, vUv) / 256.0;\n        vec3 normalSurfaceLow = texture2D(normalMapLow, vUv).xyz / 256.0;\n        vec4 specularTexelLow = texture2D(specularMapLow, vUv) / 256.0;\n\n        diffuseSurface = diffuseSurface + diffuseSurfaceLow;\n        normalSurface = normalSurface + normalSurfaceLow;\n        specularTexel = specularTexel + specularTexelLow;\n      }\n\n      float s = 1.0;\n      float white_L = 1.0;\n      float specularSurface = 0.0;\n      float roughnessSurface = 0.0;\n      float tintSurface = 0.0;\n      float metallicSurface = 0.0;\n\n      if (uBrdfModel == 1) {\n        // (M/R model)\n        white_L = 16383.0;\n        roughnessSurface = specularTexel.r;\n        metallicSurface = specularTexel.g;\n      } else {\n        // uBrdfModel == 0 (BIS model)\n        specularSurface = specularTexel.r;\n        roughnessSurface = specularTexel.g;\n        if (uTint && uBrdfVersion >= 2.0) {\n          tintSurface = specularTexel.b;\n        }\n        if (uBrdfVersion >= 2.0) {\n          s = 65535.0*0.01;\n        }\n\n        if (uLoadExr) {\n          if (uBrdfVersion == 3.0) {\n            diffuseSurface *= 16383.0;\n          }\n        } else {\n          diffuseSurface *= 65535.0;\n        }\n      }\n\n      if (uThreeJsShader && uBrdfModel == 1) {\n        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n        vec4 diffuseColor = diffuseSurface;\n        float metalnessFactor = metallicSurface;\n        float roughnessFactor = uRoughness * roughnessSurface;\n        #include <normal_fragment_begin>\n        #include <normal_fragment_maps>\n        #include <lights_physical_fragment>\n        #include <lights_fragment_begin>\n        #include <lights_fragment_maps>\n        #include <lights_fragment_end>\n\n        // Ambient light is calculated automatically as part of reflectedLight.indirectDiffuse\n        //vec3 ambientFactor = diffuseSurface.rgb * ambientLightColor;\n        vec3 diffuseFactor = uDiffuse * (reflectedLight.directDiffuse + reflectedLight.indirectDiffuse);\n        vec3 specularFactor = uSpecular * (reflectedLight.directSpecular + reflectedLight.indirectSpecular);\n        vec3 outgoingLight = white_L * uExposure * (diffuseFactor + specularFactor);\n        gl_FragColor = vec4((uContrast * (outgoingLight * 2.0 - 1.0) + 0.5) + 2.0 * uBrightness - 1.0, diffuseColor.a);\n      } else {\n        vec3 macroNormal = normalize(vNormal);\n        //vec3 mesoNormal = normal;  // Enable for tangent-space normal map\n        vec3 mesoNormal = normalize(normalMatrix * (normalSurface * 2.0 - 1.0));  // For object space normal map\n        vec3 viewerDirection = normalize(vViewPosition);\n        float ndv = max(dot(mesoNormal, viewerDirection), 0.0);\n\n        vec3 totalSpecularLight = vec3(0.0);\n        vec3 totalDiffuseLight = vec3(0.0);\n\n#if NUM_POINT_LIGHTS > 0\n        vec3 pointSpecularColor;\n        vec3 pointDiffuseColor;\n        vec3 pointAmbientColor;\n        float diffuseSurfaceMean = dot(diffuseSurface.rgb, vec3(1.0))/3.0;\n        if (uBrdfModel == 1) {  // [Three.js MR]\n          pointSpecularColor = diffuseSurface.rgb * metallicSurface + 0.04 * (1.0 - metallicSurface);\n          pointDiffuseColor = diffuseSurface.rgb * (1.0 - metallicSurface);\n          // Substance Designer:\n          //pointDiffuseColor = diffuseSurface.rgb * (1.0 - metallicSurface) * (1.0 - pointSpecularColor);\n          pointAmbientColor = ambientLightColor;\n        } else {                // [BIS Disney]]\n          pointSpecularColor = (diffuseSurface.rgb/diffuseSurfaceMean)*tintSurface + (1.0 - tintSurface);\n          pointDiffuseColor = diffuseSurface.rgb * pi; // Convert to physically correct lighting\n          pointAmbientColor = ambientLightColor * pi;  // Convert to physically correct lighting\n        }\n        for (int i = 0; i < NUM_POINT_LIGHTS; i ++) {\n          vec3 lVector = pointLights[i].position + vViewPosition.xyz;\n          lVector = normalize(lVector);\n          vec3 halfVector = normalize(lVector + viewerDirection);\n          float ndh = dot(mesoNormal, halfVector);\n          float ndl = max(dot(mesoNormal, lVector), 0.0);\n\n          float attenuation;\n          float pointSpecularWeight;\n          if (uBrdfModel == 1) {  // [Three.js MR]\n            attenuation = punctualLightIntensityToIrradianceFactor(length(lVector), pointLights[i].distance, pointLights[i].decay);\n            pointSpecularWeight = uSpecular * MRSpecular(uRoughness * roughnessSurface, ndh, ndl, ndv);\n            if (uFresnel) {\n              float vdh = dot(viewerDirection, halfVector);\n              pointSpecularColor = F_Schlick(pointSpecularColor, vdh);\n            }\n          } else {                // [BIS Disney]\n            attenuation = calcLightAttenuation(length(lVector), pointLights[i].distance, pointLights[i].decay);\n            pointSpecularWeight = DisneySpecular(uSpecular*specularSurface, uRoughness*roughnessSurface, ndh, s) / ndl;\n            // FIXME: This assumes the light colour is white or grey.\n            pointSpecularWeight *= pointLights[i].color.r;\n          }\n\n          vec3 irradiance = ndl * attenuation * pointLights[i].color;\n          totalDiffuseLight += pointDiffuseColor * irradiance / pi;\n          totalSpecularLight += pointSpecularWeight * pointSpecularColor * irradiance;\n        }\n        vec3 ambientContrib = pointDiffuseColor * pointAmbientColor / pi;\n#else\n        vec3 ambientContrib = vec3(0.0);\n#endif\n\n        vec3 outgoingLight = white_L * uExposure *\n            (ambientContrib + uDiffuse*totalDiffuseLight + totalSpecularLight);\n\n        gl_FragColor = vec4((uContrast * (outgoingLight * 2.0 - 1.0) + 0.5) + 2.0 * uBrightness - 1.0, 1.0);\n      }\n    }\n  "]);return a=function(){return e},e}function r(){var e=n(["\n    varying vec3 vNormal;\n    varying vec2 vUv;\n    varying vec3 vViewPosition;\n\n    void main() {\n      vec4 worldPosition = modelMatrix*vec4(position, 1.0);\n\n      vUv = uv;\n      // Alternatively this might be needed if we are scaling the texture:\n      // vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n      #include <beginnormal_vertex>\n      #include <defaultnormal_vertex>\n\n      vNormal = normalize(transformedNormal);\n\n      #include <begin_vertex>\n      #include <project_vertex>\n\n      vViewPosition = - mvPosition.xyz;\n    }\n    "]);return r=function(){return e},e}"undefined"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator"))),"undefined"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol("Symbol.asyncIterator")));var s=function(e){try{var t,n=function(n,o){try{var i=Promise.resolve(l(e)).then(function(e){return Promise.resolve(JSON.parse(e)).then(function(e){t=e})})}catch(e){return o()}return i&&i.then?i.then(void 0,o):i}(0,function(){t=null});return Promise.resolve(n&&n.then?n.then(function(){return t}):t)}catch(e){return Promise.reject(e)}},l=function(e){try{var t=new Promise(function(t,n){var o=new XMLHttpRequest;o.open("GET",e),o.overrideMimeType("application/json"),o.onload=function(){o.status>=200&&o.status<300?t(o.response):n(o.statusText)},o.onerror=function(){n(o.statusText)},o.send()});return Promise.resolve(t)}catch(e){return Promise.reject(e)}};function u(e,t,n){for(var o in void 0===n&&(n=null),null==n&&(vector_keys={lightPosition:THREE.Vector3,lightPositionOffset:THREE.Vector2}),e){var i=n[o];t[o]=null==i?e[o]:(a=e[o],r=i,s=void 0,console.assert(r==THREE.Vector2||r==THREE.Vector3||r==THREE.Color),Array.isArray(a)?(s=new r).fromArray(a):s=a,s)}var a,r,s}function c(e,t,n){for(var o in e)t[o]=null==n[o]?e[o]:e[o].clone()}e.bivotJs=function(){function e(e){this.controlModes={FULL:"full",QA:"qa",MANAGE:"manage",NONE:"none"};var n,o=(n=function(e){return e.toString()},{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.lights,{diffuseMap:{value:null},normalMap:{value:null},specularMap:{value:null},normalScale:{value:new THREE.Vector2(1,1)},uExposure:{value:1},uDiffuse:{value:1},uSpecular:{value:1},uRoughness:{value:1},uTint:{value:!0},uFresnel:{value:!1},uBrdfModel:{value:0},uThreeJsShader:{value:!1},uBrdfVersion:{value:2},uLoadExr:{value:!1},uDual8Bit:{value:!1},diffuseMapLow:{value:null},normalMapLow:{value:null},specularMapLow:{value:null},ltc_1:{value:null},ltc_2:{value:null},uBrightness:{value:1},uContrast:{value:.5}}]),vertexShader:n(r()),fragmentShader:n(a())}),i=o.vertexShader,s=o.fragmentShader;if(this.uniforms=o.uniforms,this.vertexShader=i,this.fragmentShader=s,this.opts=t({},{canvasID:"bivot-canvas",overlayID:"bivot-overlay",configPath:"bivot-config.json",renderPath:"bivot-renders.json",texturePath:"textures",controlMode:this.controlModes.FULL,useTouch:null,width:0,height:0,state:null,stateLoadCallback:null,setZoomCallback:null},e),this.state={exposure:1,brightness:.5,contrast:.5,focalLength:85,diffuse:1,specular:1,roughness:1,tint:!0,fresnel:!1,ambient:1,fxaa:!0,bloom:.1,adaptiveToneMap:!1,toneMapDarkness:.04,gammaCorrect:!0,threeJsShader:!0,lightType:"point",areaLightWidth:5,areaLightHeight:.2,lightMotion:"mouse",lightColor:[255,255,255],lightPosition:new THREE.Vector3(0,0,1),lightPositionOffset:new THREE.Vector2(0,0),lightNumber:1,lightSpacing:.5,light45:!1,scan:"kimono 2k",brdfModel:1,brdfVersion:2,yFlip:!0,background:5,backgroundColor:"#050505",meshRotateZDegrees:0,camTiltWithMousePos:0,camTiltWithDeviceOrient:0,camTiltLimitDegrees:0,lightTiltWithMousePos:1,lightTiltWithDeviceOrient:1,lightTiltLimitDegrees:0,tiltDriftSpeed:1,tiltZeroOnMouseOut:!1,portrait:!1,autoRotatePeriodMs:0,autoRotateFps:30,autoRotateCamFactor:.5,autoRotateLightFactor:.9,zoom:[.4,.9,2],_camPositionOffset:new THREE.Vector2(0,0),_meshRotateZDegreesPrevious:0,_statusText:""},this.config={textureFormat:"EXR",loadExr:void 0,loadPng:void 0,loadJpeg:void 0,dual8Bit:!1,showInterface:!0,mouseCamControlsZoom:!0,mouseCamControlsRotate:!0,mouseCamControlsPan:!0,useTouch:!0,initCamZ:.9,minCamZ:.4,maxCamZ:2,linearFilter:!0,gamma:1.8,initialState:{}},this.opts.state){for(var l in this.state)this.opts.state.hasOwnProperty(l)||(this.opts.state[l]=this.state[l]);this.state=this.opts.state}this.vectorKeys={lightPosition:THREE.Vector3,lightPositionOffset:THREE.Vector2},c(this.state,this.config.initialState,this.vectorKeys),this.canvas=document.getElementById(this.opts.canvasID),this.overlay=document.getElementById(this.opts.overlayID),console.assert(null!=this.canvas,"canvas element ID not found:",this.opts.canvasID),console.assert(null!=this.overlay,"overlay div element ID not found:",this.opts.overlayID),this.scans={},this.exposureGain=1e-4,this.stats=null,this.renderRequested=!1,this.scene=new THREE.Scene,this.camera=null,this.lights=null,this.lights45=null,this.mesh=null,this.renderer=null,this.fxaaPass=null,this.toneMappingPass=null,this.renderPass=null,this.bloomPass=null,this.gammaCorrectPass=null,this.composer=null,this.controls=null,this.mouseX=0,this.mouseY=0,this.timeouts=[],this.listeners=[],this.elements=[]}var n=e.prototype;return n.startRender=function(){var e=this,t=this,n=null,o=null,a=!1,r=window.matchMedia("(pointer: coarse)").matches,l=new THREE.Vector2(0,0),h=!1,f=null,d=!1,m=null,g=null,p=null,v=null,E=null,y="undefined"!=typeof DeviceOrientationEvent&&"function"==typeof DeviceOrientationEvent.requestPermission,R=null,T=!1,b=null,w=!1,P=null;/iPhone|iPad|iPod/i.test(navigator.userAgent)&&(b=navigator.userAgent.match(/OS [\d_]+/i)[0].substr(3).split("_").map(function(e){return parseInt(e)}),w=12==b[0]&&b[1]>=2);var S=function(){for(var e,t={controls:["full","qa","manage","none"],show:"SAFE_STRING",showcase:["1"],textureFormat:["JPG","PNG","EXR"]},n={},o=i(new URL(window.location.href).searchParams);!(e=o()).done;){var a=e.value,r=a[0],s=decodeURI(a[1]);if(t.hasOwnProperty(r)){var l=t[r];Array.isArray(l)?l.includes(s)?n[r]=s:console.warn("Invalid query parameter value for key:",r):"SAFE_STRING"==l&&(/^[a-zA-Z0-9-_\s]*$/.test(s)?n[r]=s:console.warn("Invalid characters in string value for key:",r))}else console.warn("Invalid keys found in query parameters")}return console.log("URL flags:",n),n}();function L(){g.style.display="none",t.uniforms.diffuseMap.value=m.get("diffuse"),t.uniforms.normalMap.value=m.get("normals"),t.uniforms.specularMap.value=m.get("specular"),t.config.dual8Bit&&(t.uniforms.diffuseMapLow.value=m.get("diffuse_low"),t.uniforms.normalMapLow.value=m.get("normals_low"),t.uniforms.specularMapLow.value=m.get("specular_low"));var e=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:t.uniforms,lights:!0});e.defines={USE_NORMALMAP:1,OBJECTSPACE_NORMALMAP:1},e.extensions.derivatives=!0,t.mesh.traverse(function(t){t instanceof THREE.Mesh&&(t.material=e)}),t.scene.add(t.mesh),!R||d||!w&&!y||a||(P=setTimeout(function(){w&&(t.state._statusText="To enable tilt control, please switch on Settings > Safari > Motion & Orientation Access and then reload this page."),H()},1e3),t.timeouts.push(P),t.registerEventListener(window,"deviceorientation",F)),d=!0,h=!1,t.updateLightingGrid(),t.requestRender()}function M(){t.state.adaptiveToneMap||(t.toneMappingPass.setAdaptive(!1),t.toneMappingPass.setAverageLuminance(t.state.toneMapDarkness))}function x(e){t.opts.setZoomCallback&&t.opts.setZoomCallback(t.camera.position.length()),t.requestRender()}function C(e){(e.alpha||e.beta||e.gamma)&&(a=!0,window.removeEventListener("deviceorientation",C,!1),t.state.lightMotion="gyro",_())}function D(e){"function"==typeof DeviceOrientationEvent.requestPermission&&DeviceOrientationEvent.requestPermission().then(function(e){"granted"===e&&(T=!0,_(),F())}).catch(console.error)}function F(){clearTimeout(P),window.removeEventListener("deviceorientation",F),t.state._statusText="",a&&(T=!0),H()}function H(){if(R&&y&&!T){v.style.display="flex";var e=t.registerElement(document,"button");e.className="bivot-button",e.innerHTML="Tap to enable tilt control",e.onclick=D,E.appendChild(e)}else 0==t.state._statusText.length?(v.style.display="none",E.innerHTML=""):(v.style.display="flex",E.innerHTML=t.state._statusText)}function _(){"mouse"==t.state.lightMotion?(window.removeEventListener("deviceorientation",A,!1),t.registerEventListener(document,"mousemove",O,!1),t.registerEventListener(document,"mouseout",B,!1)):"gyro"==t.state.lightMotion?(t.registerEventListener(window,"deviceorientation",A,!1),document.removeEventListener("mousemove",O,!1),document.removeEventListener("mouseout",B,!1)):(console.assert("sliders"==t.state.lightMotion),window.removeEventListener("deviceorientation",A,!1),document.removeEventListener("mousemove",O,!1),document.removeEventListener("mouseout",B,!1),t.lights&&(t.state.lightPosition.set(0,0,1),t.updateLightingGrid()))}function O(e){if(e.preventDefault(),t.mouseX=e.clientX,t.mouseY=e.clientY,t.isMouseInCanvas()){var n=t.canvas.getBoundingClientRect(),o=new THREE.Vector2((t.mouseX-n.left)/(n.right-n.left)*2-1,-(t.mouseY-n.top)/(n.bottom-n.top)*2+1);t.updateCamsAndLightsFromXY(o,t.state.lightTiltWithMousePos,t.state.camTiltWithMousePos)}}function B(e){t.lights&&t.state.tiltZeroOnMouseOut&&(t.state.lightPosition.set(t.state.lightPositionOffset.x,t.state.lightPositionOffset.y,1),t.state.lightPosition.copy(t.xyTo3dDirection(new THREE.Vector2(0,0),t.state.lightPositionOffset,t.state.lightTiltWithMousePos,t.state.lightTiltLimitDegrees)),t.updateLightingGrid()),t.camera&&t.state.tiltZeroOnMouseOut&&0!=t.state.camTiltWithMousePos&&t.camera.position.set(0,0,t.camera.position.length()),t.state.autoRotatePeriodMs&&"mouse"==t.state.lightMotion&&t.requestRender()}function A(e){var n=function(e){var t=window.orientation||0,n=new THREE.Vector2;return 0==t||180==t?n.set(e.beta,e.gamma):n.set(e.gamma,e.beta),0==t?n.y=-n.y:90==t?(n.x=-n.x,n.y=-n.y):180==t&&(n.x=-n.x),n}(e);h||(l.copy(n),h=!0);var o=n.clone().sub(l),i=new THREE.Vector2(Math.sin(THREE.Math.degToRad(o.y)),Math.sin(THREE.Math.degToRad(o.x))),a=Math.max(t.state.camTiltLimitDegrees,t.state.lightTiltLimitDegrees),r=Math.cos(THREE.Math.degToRad(a));if(i.length()>r){var s=i.length()-i.clone().clampLength(0,r).length();l.addScaledVector(o,s*t.state.tiltDriftSpeed)}t.updateCamsAndLightsFromXY(i,t.state.lightTiltWithDeviceOrient,t.state.camTiltWithDeviceOrient)}function V(){t.state._meshRotateZDegreesPrevious=0,t.updateMeshRotation()}function G(e,n,o){new THREE.OBJLoader(o).load(n,function(e){console.log("Loaded mesh object:",n),t.mesh=e,V()},function(e){},function(e){console.log("Mesh unavailable; using planar geometry"),t.mesh=new THREE.Mesh(new THREE.PlaneBufferGeometry(2048/(300/.0254),2048/(300/.0254))),V()}),m=new Map,f="EXR"==t.config.textureFormat?new THREE.EXRLoader(o):new THREE.TextureLoader(o),k(0,0,1),console.log(e);for(var a,r=function(){var e=a.value,n=e[0],o=e[1];f.load(o.path,function(e,i){t.config.linearFilter?"EXR"==t.config.textureFormat?(e.minFilter=THREE.LinearFilter,e.magFilter=THREE.LinearFilter):(e.minFilter=THREE.LinearMipMapLinearFilter,e.magFilter=THREE.LinearFilter):(e.minFilter=THREE.NearestFilter,e.magFilter=THREE.NearestFilter),e.name=n,e.flipY=t.state.yFlip==("EXR"==t.config.textureFormat),e.format=o.format,console.log("Loaded:",n,o.path),m.set(n,e)})},s=i(e);!(a=s()).done;)r()}function I(e,n){var o=[],i=t.scans[t.state.scan];i.hasOwnProperty("cameraPositionX")&&(t.camera.position.x=i.cameraPositionX),i.hasOwnProperty("cameraPositionY")&&(t.camera.position.y=i.cameraPositionY),i.hasOwnProperty("cameraPositionZ")&&(t.camera.position.z=i.cameraPositionZ),i.hasOwnProperty("controlsMinDistance")&&(t.controls.minDistance=i.controlsMinDistance),i.hasOwnProperty("controlsMaxDistance")&&(t.controls.maxDistance=i.controlsMaxDistance),i.hasOwnProperty("state")&&u(i.state,o,t.vectorKeys),i.hasOwnProperty("version")&&(o.brdfVersion=i.version),function(e,t,n,o,i,a){e.forEach(function(e,r){var s=a[e];e in n?null==s?t[e]=n[e]:t[e].copy(n[e]):e in o?null==s?t[e]=o[e]:t[e].copy(o[e]):e in i&&(null==s?t[e]=i[e]:t[e].copy(i[e]))})}(n,t.state,o,e,t.config.initialState,t.vectorKeys),console.log("  BRDF model: ",t.state.brdfModel),console.log("  BRDF version: ",t.state.brdfVersion),t.opts.stateLoadCallback&&t.opts.stateLoadCallback(t.state)}function k(e,t,n){var o=t/n;g.style.display="",p.style.transform="scaleX("+o+")"}Object.values(this.controlModes).indexOf(S.controls)>-1&&(this.opts.controlMode=S.controls),function(){try{return Promise.resolve(function(e,t,n,o,i){try{var a,r=function(){if(e)return Promise.resolve(s(e)).then(function(o){if(o){for(a in console.log("Loaded:",e),o)"initialState"==a?u(o[a],t.initialState,i):t[a]=o[a];c(t.initialState,n,i)}else console.log("Error: Failed to load "+e)});if(o)for(a in console.log("Using provided config object"),o)"initialState"==a?u(o[a],t.initialState,i):t[a]=o[a]}();return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}(t.opts.configPath,t.config,t.state,t.opts.config,t.vectorKeys)).then(function(){return Promise.resolve(function(e,t){try{var n={},o=function(){if(e)return Promise.resolve(s(e)).then(function(t){if(t)if(console.log("Loaded:",t),1==S.showcase)for(var o in t.renders)t.renders.hasOwnProperty(o)&&t.renders[o].showcase>0&&(n[o]=t.renders[o]);else n=t.renders;else console.log("Error: Failed to load "+e)});t&&(console.log("Using provided material object"),n=t.config.renders)}();return Promise.resolve(o&&o.then?o.then(function(){return n}):n)}catch(e){return Promise.reject(e)}}(t.opts.renderPath,t.opts.material)).then(function(e){t.scans=e,t.scans.hasOwnProperty(t.state.scan)||(t.state.scan=Object.keys(t.scans)[0])})})}catch(e){return Promise.reject(e)}}().then(function(){var i,a,s,l,c,h;S.hasOwnProperty("show")&&(t.state.scan=S.show),S.hasOwnProperty("textureFormat")&&(t.config.textureFormat=S.textureFormat),console.assert((e.config.loadExr||0)+(e.config.loadPng||0)+(e.config.loadJpeg||0)<=1),e.config.loadExr?e.config.textureFormat="EXR":e.config.loadPng?e.config.textureFormat="PNG":e.config.loadJpeg&&(e.config.textureFormat="JPG"),e.config.hasOwnProperty("textureFormat")&&"string"==typeof e.config.textureFormat&&(e.config.textureFormat=e.config.textureFormat.toUpperCase()),console.log("Options:",e.opts),console.log("Config:",e.config),console.log("State:",e.state),console.log("Renders:",e.scans),R=0!=e.state.camTiltWithDeviceOrient||0!=e.state.lightTiltWithDeviceOrient,function(e){var n=t.registerElement(document,"div");n.id="bivot-loading";var o=t.registerElement(document,"div");o.id="bivot-progress";var i=t.registerElement(document,"div");i.id="bivot-progressbar",e.appendChild(n),n.appendChild(o),o.appendChild(i);var a=t.registerElement(document,"div");a.id="bivot-subtitle";var r=t.registerElement(document,"div");r.id="bivot-subtitle-background";var s=t.registerElement(document,"p");s.id="bivot-subtitle-text",e.appendChild(a),a.appendChild(r),r.appendChild(s),g=n,p=i,v=a,E=s}(e.overlay),i=e.getBgColorFromState(e.state),(a=e.scene).background=new THREE.Color(i),t.updateLightingGrid(),_(),o=new THREE.AmbientLight(4144959,1),a.add(o),e.camera=function(e,t){n=function(e,t){return 2*Math.atan(.024/(2*e/1e3))*180/Math.PI}(e);var o=new THREE.PerspectiveCamera(n,2,.01,10);return o.position.set(0,0,t),o}(e.state.focalLength,e.config.initCamZ),e.controls=(l=e.config,c=e.state.camTiltLimitDegrees,(h=new THREE.OrbitControls(e.camera,e.canvas)).enableDamping=!0,h.dampingFactor=.15,h.panSpeed=.3,h.rotateSpeed=1,h.zoomSpeed=1,h.target.set(0,0,0),h.update(),h.enableZoom=l.mouseCamControlsZoom,h.enableRotate=l.mouseCamControlsRotate,h.enablePan=l.mouseCamControlsPan,h.minDistance=l.minCamZ,h.maxDistance=l.maxCamZ,h.screenSpacePanning=!0,r&&(h.zoomSpeed*=.25,l.useTouch||h.dispose()),function(e,t){var n=Math.PI*t/180;e.minPolarAngle=n,e.maxPolarAngle=Math.PI-n,e.minAzimuthAngle=-Math.PI/2+n,e.maxAzimuthAngle=+Math.PI/2-n}(h,c),t.registerEventListener(h,"change",x),h),THREE.RectAreaLightUniformsLib.init(),e.renderer=e.initialiseRenderer(),e.composer=e.initialiseComposer(e.renderer,M),e.initialiseCanvas(e.canvas,e.opts.width,e.opts.height),function(){null!=t.mesh&&(t.scene.remove(t.mesh),t.mesh.traverse(function(e){e instanceof THREE.Mesh&&(e.geometry.dispose(),e.material.dispose())}));var e=new THREE.LoadingManager;e.onLoad=L,e.onProgress=k;var n=Object.keys(t.config.initialState);t.opts.textures&&t.opts.material?function(e,n,o,i){var a=new Map;a.set("diffuse",{path:n.basecolor,format:THREE.RGBFormat}),a.set("normals",{path:n.normals,format:THREE.RGBFormat}),a.set("specular",{path:n.specular,format:THREE.RGBFormat});var r=[],s=o.config.renders[t.state.scan];s.hasOwnProperty("state")&&u(s.state,r,t.vectorKeys),s.hasOwnProperty("version")&&(r.brdfVersion=s.version),I(r,i),G(a,n.mesh,e)}(e,t.opts.textures,t.opts.material,n):function(e,n,o){var i,a,r,s=n+"/render.json",l=function(e){try{return require(""+e)}catch(e){return null}}(s);i=s,a=function(i,a){var r=[];if(null==i&&l){var c=JSON.parse(a);console.log("Loaded metadata from "+s+":",c),c.hasOwnProperty("state")&&u(c.state,r),c.hasOwnProperty("version")&&(r.brdfVersion=c.version),I(r,o)}else console.log("Render metadata ("+s+") not loaded: "+i);!function(e,n){var o=new Map;1==t.state.brdfModel&&t.state.brdfVersion>=2?(o.set("diffuse","basecolor"),o.set("normals","normals"),o.set("specular","roughness-metallic")):(o.set("diffuse","diffuse"),o.set("normals","normals"),o.set("specular","specular-srt"));var i=new Map;console.assert(["JPG","PNG","EXR"].includes(t.config.textureFormat)),"EXR"==t.config.textureFormat?(i.set("diffuse",{path:n+"/brdf-"+o.get("diffuse")+"_cropf16.exr",format:THREE.RGBFormat}),i.set("normals",{path:n+"/brdf-"+o.get("normals")+"_cropf16.exr",format:THREE.RGBFormat}),i.set("specular",{path:n+"/brdf-"+o.get("specular")+"_cropf16.exr",format:THREE.RGBFormat})):"JPG"==t.config.textureFormat?(i.set("diffuse",{path:n+"/brdf-"+o.get("diffuse")+"_cropu8_hi.jpg",format:THREE.RGBFormat}),i.set("normals",{path:n+"/brdf-"+o.get("normals")+"_cropu8_hi.jpg",format:THREE.RGBFormat}),i.set("specular",{path:n+"/brdf-"+o.get("specular")+"_cropu8_hi.jpg",format:THREE.RGBFormat})):(i.set("diffuse",{path:n+"/brdf-"+o.get("diffuse")+"_cropu8_hi.png",format:THREE.RGBFormat}),i.set("normals",{path:n+"/brdf-"+o.get("normals")+"_cropu8_hi.png",format:THREE.RGBFormat}),i.set("specular",{path:n+"/brdf-"+o.get("specular")+"_cropu8_hi.png",format:THREE.RGBFormat}),t.config.dual8Bit&&(i.set("diffuse_low",{path:n+"/brdf-"+o.get("diffuse")+"_cropu8_lo.png",format:THREE.RGBFormat}),i.set("normals_low",{path:n+"/brdf-"+o.get("normals")+"_cropu8_lo.png",format:THREE.RGBFormat}),i.set("specular_low",{path:n+"/brdf-"+o.get("specular")+"_cropu8_lo.png",format:THREE.RGBFormat}))),G(i,n+"/brdf-mesh.obj",e)}(e,n)},(r=new XMLHttpRequest).open("GET",i),r.overrideMimeType("application/json"),r.onload=function(){var e=r.status;a(200==e?null:e,r.response)},r.onerror=function(){a(r.status,r.response)},r.send()}(e,t.opts.texturePath+"/"+t.state.scan,n)}(),(s=e.state.zoom)&&(t.state.currentZoom=s[1],t.updateZoom()),R&&e.registerEventListener(window,"deviceorientation",C,!1),e.registerEventListener(window,"resize",e.requestRender),1!=e.opts.useTouch&&0!=e.opts.useTouch||(e.config.useTouch=e.opts.useTouch)})},n.initialiseCanvas=function(e,t,n){var o,i,a=this.overlay;t&&n?(o=t,i=n):(o=a.clientWidth,i=a.clientHeight);var r=window.devicePixelRatio||1;e.width=o*r,e.height=i*r,this.updateCanvas()},n.initialiseRenderer=function(){var e=new THREE.WebGLRenderer({canvas:this.canvas});return e.physicallyCorrectLights=!0,e.gammaInput=!0,e.gammaOutput=!1,e.gammaFactor=this.config.gamma,e},n.initialiseComposer=function(e,t){var n=new THREE.EffectComposer(e);return this.renderPass=new THREE.RenderPass(this.scene,this.camera),n.addPass(this.renderPass),this.bloomPass=new THREE.UnrealBloomPass(new THREE.Vector2(window.innerWidth,window.innerHeight),this.state.bloom,.4,.99),n.addPass(this.bloomPass),this.fxaaPass=new THREE.ShaderPass(THREE.FXAAShader),this.setFxaaResolution(),n.addPass(this.fxaaPass),this.gammaCorrectPass=new THREE.ShaderPass(THREE.GammaCorrectionShader),n.addPass(this.gammaCorrectPass),this.toneMappingPass=new THREE.AdaptiveToneMappingPass(!0,256),t(),n.addPass(this.toneMappingPass),n},n.isMouseInCanvas=function(){var e=this.canvas.getBoundingClientRect();return this.mouseX>=e.left&&this.mouseX<e.right&&this.mouseY>=e.top&&this.mouseY<e.bottom},n.updateLightingGrid=function(){this.lights&&this.scene.remove(this.lights),this.lights45&&this.scene.remove(this.lights45);var e=65536*Math.round(.5*this.state.lightColor[0])+256*Math.round(.5*this.state.lightColor[1])+Math.round(.5*this.state.lightColor[2]),t=Math.pow(this.state.lightNumber,2);this.state.light45&&(t*=2);for(var n=1/t*2,o=new THREE.Vector3(0,0,this.state.lightPosition.length()),i=new THREE.Group,a=this.state.lightNumber/2-.5,r=0;r<this.state.lightNumber;r++)for(var s=0;s<this.state.lightNumber;s++){var l=new THREE.Vector3((r-a)*this.state.lightSpacing,(s-a)*this.state.lightSpacing,0);if("area"==this.state.lightType){var u=n/(Math.atan(this.state.areaLightWidth)*Math.atan(this.state.areaLightHeight)),c=new THREE.RectAreaLight(e,u,this.state.areaLightWidth,this.state.areaLightHeight);c.position.copy(o),c.position.add(l),i.add(c)}else{var h=new THREE.PointLight(e,n,10,2);h.position.copy(o),h.position.add(l),i.add(h)}}var f=o.clone();f.normalize();var d=this.state.lightPosition.clone();d.normalize();var m=new THREE.Vector3(0,0,0);m.crossVectors(f,d);var g=Math.acos(f.dot(d));if(i.rotateOnAxis(m,g),this.lights=i,this.scene.add(i),this.state.light45){this.lights45=i.clone();var p=new THREE.Vector3(1,0,0);this.lights45.rotateOnAxis(p,Math.PI/4),this.scene.add(this.lights45)}else this.lights45=null;this.requestRender()},n.updateCamsAndLightsFromXY=function(e,t,n){if(this.lights&&0!=t&&(this.state.lightPosition.copy(this.xyTo3dDirection(e,this.state.lightPositionOffset,t,this.state.lightTiltLimitDegrees)),this.updateLightingGrid()),this.camera&&0!=n){var o=this.xyTo3dDirection(e,this.state._camPositionOffset,n,this.state.camTiltLimitDegrees);this.camera.position.copy(o.multiplyScalar(this.camera.position.length())),this.requestRender()}},n.xyTo3dDirection=function(e,t,n,o){var i=new THREE.Vector2,a=Math.cos(Math.PI*o/180);i.copy(e).add(t).multiplyScalar(n).clampLength(0,a);var r=1-i.lengthSq(),s=0;return r>0&&(s=Math.sqrt(r)),console.assert(!isNaN(s)),new THREE.Vector3(i.x,i.y,s)},n.updateMeshRotation=function(){this.mesh&&(this.mesh.rotateZ((this.state.meshRotateZDegrees-this.state._meshRotateZDegreesPrevious)*Math.PI/180),this.state._meshRotateZDegreesPrevious=this.state.meshRotateZDegrees)},n.updateCanvas=function(){var e=window.devicePixelRatio||1;this.canvas.style.width=this.canvas.width/e+"px",this.canvas.style.height=this.canvas.height/e+"px",this.renderer.setSize(this.canvas.width,this.canvas.height,!1),this.camera.aspect=this.canvas.width/this.canvas.height,this.camera.updateProjectionMatrix(),this.composer.setSize(this.canvas.width,this.canvas.height),this.setFxaaResolution()},n.getBgColorFromState=function(e){return e.backgroundColor?parseInt(e.backgroundColor.replace("#","0x")):65793*e.background},n.updateBackground=function(){this.scene.background=new THREE.Color(this.getBgColorFromState(this.state)),this.requestRender()},n.updateZoom=function(){if(this.controls&&(this.controls.minDistance=this.state.zoom[0],this.controls.maxDistance=this.state.zoom[2]),this.camera){var e=this.state.currentZoom/this.camera.position.length();this.camera.position.copy(this.camera.position.multiplyScalar(e))}this.requestRender()},n.setFxaaResolution=function(){var e=this.fxaaPass.material.uniforms,t=1/this.renderer.getPixelRatio();this.state.fxaa||(t=0),e.resolution.value.x=t/window.innerWidth,e.resolution.value.y=t/window.innerHeight},n.updateAutoRotate=function(e){var t=this;if(!this.isMouseInCanvas()){var n=2*Math.PI*e,o=new THREE.Vector2(-Math.sin(n),Math.cos(n)),i=this.state.lightTiltWithMousePos*this.state.autoRotateLightFactor,a=this.state.camTiltWithMousePos*this.state.autoRotateCamFactor;this.timeouts.push(setTimeout(function(){return t.updateCamsAndLightsFromXY(o,i,a)},1e3/this.state.autoRotateFps))}},n.render=function(e){this.controls&&this.composer&&(this.stats&&this.stats.begin(),this.state.dirty&&(this.state.dirty=!1,this.updateBackground(),this.updateLightingGrid(),this.updateMeshRotation(),this.updateCanvas(),this.updateZoom()),this.controls.update(),this.state.autoRotatePeriodMs&&this.updateAutoRotate(e%this.state.autoRotatePeriodMs/this.state.autoRotatePeriodMs),this.uniforms.uExposure.value=this.exposureGain*this.state.exposure,this.uniforms.uBrightness.value=this.state.brightness,this.uniforms.uContrast.value=this.state.contrast,this.uniforms.uDiffuse.value=this.state.diffuse,this.uniforms.uSpecular.value=this.state.specular,this.uniforms.uRoughness.value=this.state.roughness,this.uniforms.uTint.value=this.state.tint,this.uniforms.uFresnel.value=this.state.fresnel,this.uniforms.uThreeJsShader.value=this.state.threeJsShader,this.uniforms.uBrdfModel.value=this.state.brdfModel,this.uniforms.uBrdfVersion.value=this.state.brdfVersion,this.uniforms.uLoadExr.value="EXR"==this.config.textureFormat,this.uniforms.uDual8Bit.value=this.config.dual8Bit,this.uniforms.ltc_1.value=THREE.UniformsLib.LTC_1,this.uniforms.ltc_2.value=THREE.UniformsLib.LTC_2,this.composer.render(),this.stats&&this.stats.end(),this.renderRequested=!1)},n.requestRender=function(){!this.renderRequested&&this.render&&(this.renderRequested=!0,requestAnimationFrame(this.render.bind(this)))},n.checkWebGL=function(){!1===THREE.WEBGL.isWebGLAvailable()&&document.body.appendChild(THREE.WEBGL.getWebGLErrorMessage())},n.registerEventListener=function(e,t,n){for(var o=arguments.length,i=new Array(o>3?o-3:0),a=3;a<o;a++)i[a-3]=arguments[a];e.addEventListener.apply(e,[t,n].concat(i)),this.listeners.push({object:e,type:t,listener:n})},n.registerElement=function(e,t){var n=e.createElement(t);return this.elements.push(n),n},n.shutdown=function(){for(var e=0;e<this.timeouts.length;e++)clearTimeout(this.timeouts[e]);for(this.timeouts=null,e=0;e<this.listeners.length;e++){var t=this.listeners[e];t.object.removeEventListener(t.type,t.listener)}for(this.listeners=null,e=0;e<this.elements.length;e++){var n=this.elements[e];n.parentNode.removeChild(n)}this.elements=null,this.canvas=null,this.overlay=null},e}()});
